#!/usr/bin/python3

from optparse import OptionParser

from nitwit.actions import reports, tags, categories, tickets, init, sprints
from nitwit.helpers.settings import load_settings

import sys, os


parser = None
options = None

# Load the git/config settings file
if (settings := load_settings()) is None:
    parser.error("Please only run inside of a git repo")

if len(sys.argv) < 2:
    parser.error("Couldn't find a valid git repo")

err = None

## Installation / Setup
if sys.argv[1] == 'init':
    err = init.handle_init(parser, options, sys.argv)

## Reports
elif sys.argv[1] == 'gen':
    err = reports.handle_gen(parser, options, sys.argv, settings)
elif sys.argv[1] == 'consume':
    err = reports.handle_consume(parser, options, sys.argv, settings)

## Tickets
elif sys.argv[1] == 'ticket':
    err = tickets.handle_ticket( parser, options, sys.argv, settings )

## Tags
elif sys.argv[1] == 'tag':
    err = tags.handle_tag(settings)

## Categories
elif sys.argv[1] == 'category':
    err = categories.handle_category(parser, options, sys.argv, settings)

## Sprint
elif sys.argv[1] == 'sprint':
    err = sprints.handle_sprints(parser, options, sys.argv, settings)

else:
    err = "Unknown command"

## Errors
if err is not None:
    print(err)
    #parser.print_help()
    #parser.error(f'''Invalid argv, review the info
#{err}
#''')